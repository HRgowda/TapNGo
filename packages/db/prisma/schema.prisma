generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  email String? @unique
  name String?
  number String @unique
  password String
  OnRampTransaction OnRampTransaction[]
  Balance Balance[]
  sentTransfers p2pTransfer[] @relation(name: "FromUserRelation")
  receivedTransfers p2pTransfer[] @relation(name: "ToUserRelation")
}

model Merchant {
  id Int @id @default(autoincrement())
  email String @unique
  name String?
  auth_type AuthType   
}

// to list the transaction history with the status of it.
model OnRampTransaction{
  id Int @id @default(autoincrement())
  status onrampStatus
  token String @unique
  provider String
  amount Int
  startTime DateTime
  userid Int
  user User @relation(fields: [userid], references: [id])
}

model p2pTransfer {
  id Int @id @default(autoincrement())
  amount Int
  timestamp DateTime
  fromUserId Int
  fromUser User @relation(name: "FromUserRelation", fields: [fromUserId], references: [id])
  toUserId Int
  toUser User @relation(name: "ToUserRelation", fields: [toUserId], references: [id])
}

model Balance {
  id Int @id @default(autoincrement())
  userid Int @unique
  amount Int
  locked Int
  user User @relation(fields: [userid], references: [id])
}

enum AuthType {
  Google
  Github
}

enum onrampStatus {
  Success
  Failure
  Processing
}