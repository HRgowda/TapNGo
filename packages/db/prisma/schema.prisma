generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int                 @id @default(autoincrement())
  email             String?             @unique
  password          String
  firstName         String
  lastName          String?
  pin               String
  number            String?
  Balance           Balance?
  Card              Card[]
  goals             DepositGoals[]
  OnRampTransaction OnRampTransaction[]
  sentTransfers     p2pTransfer[]       @relation("FromUserRelation")
  receivedTransfers p2pTransfer[]       @relation("ToUserRelation")
}

model Merchant {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String?
}

model OnRampTransaction {
  id        Int          @id @default(autoincrement())
  status    onrampStatus
  token     String       @unique
  provider  String
  amount    Int
  startTime DateTime
  userid    Int
  user      User         @relation(fields: [userid], references: [id])
}

model p2pTransfer {
  id         Int      @id @default(autoincrement())
  amount     Int
  timestamp  DateTime
  fromUserId Int
  toUserId   Int
  fromUser   User     @relation("FromUserRelation", fields: [fromUserId], references: [id])
  toUser     User     @relation("ToUserRelation", fields: [toUserId], references: [id])
}

model Balance {
  id     Int  @id @default(autoincrement())
  userid Int  @unique
  amount Int  @default(1000)
  locked Int  @default(200)
  user   User @relation(fields: [userid], references: [id])
}

model Card {
  id         Int    @id @default(autoincrement())
  cardNumber String @unique
  validDate  String
  expiryDate String
  cvv        String
  userid     Int
  User       User   @relation(fields: [userid], references: [id])
}

model DepositGoals {
  id             Int      @id @default(autoincrement())
  userid         Int
  goalAmount     Int
  currentSavings Int      @default(0)
  deadline       DateTime
  status         String   @default("Active")
  goalType       String
  user           User     @relation(fields: [userid], references: [id])

  @@unique([userid, goalType], name: "userid_goalType")
}

model otp {
  id        Int      @unique @default(autoincrement())
  email     String   @unique
  otpHashed String
  used      Boolean  @default(false)
  expiresAt DateTime
}

enum onrampStatus {
  Success
  Failure
  Processing
}
